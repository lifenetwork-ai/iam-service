// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/account/me": {
            "get": {
                "description": "This endpoint retrieves the details of the currently authenticated user using the provided access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get current user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountDetailDTO"
                        }
                    },
                    "401": {
                        "description": "Invalid or expired token",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "This endpoint authenticates the user by email and password, and returns an access token and refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "User credentials (email and password)",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginPayloadDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful: {\\\"access_token\\\": \\\"...\\\", \\\"refresh_token\\\": \\\"...\\\"}",
                        "schema": {
                            "$ref": "#/definitions/dto.TokenPairDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "description": "This endpoint invalidates the refresh token, effectively logging the user out.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "description": "Logout payload containing the refresh token",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LogoutPayloadDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logout successful: {\\\"success\\\": true}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh-tokens": {
            "post": {
                "description": "This endpoint generates a new pair of access and refresh tokens using a valid refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh tokens",
                "parameters": [
                    {
                        "description": "Refresh token payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenPayloadDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tokens refreshed successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.TokenPairDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "This endpoint registers a new account and its associated role-specific details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Register a new account",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterPayloadDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Registration successful: {\\\"success\\\": true}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    },
                    "409": {
                        "description": "Account already exists",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/validate-token": {
            "get": {
                "description": "This endpoint validates an access token and retrieves the corresponding user's details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Validate access token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer access token (e.g., 'Bearer \u003ctoken\u003e')",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token is valid: User details",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountDTO"
                        }
                    },
                    "401": {
                        "description": "Invalid or expired token",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.GeneralError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AccountDTO": {
            "type": "object",
            "properties": {
                "api_key": {
                    "description": "Nullable",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "oauth_id": {
                    "description": "Nullable",
                    "type": "string"
                },
                "oauth_provider": {
                    "description": "Nullable",
                    "type": "string"
                },
                "role": {
                    "description": "USER, PARTNER, CUSTOMER, VALIDATOR",
                    "type": "string"
                }
            }
        },
        "dto.AccountDetailDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/dto.AccountDTO"
                },
                "company_name": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "industry": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "validation_organization": {
                    "type": "string"
                }
            }
        },
        "dto.LoginPayloadDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "User email",
                    "type": "string"
                },
                "password": {
                    "description": "User password",
                    "type": "string"
                }
            }
        },
        "dto.LogoutPayloadDTO": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.RefreshTokenPayloadDTO": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterPayloadDTO": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role"
            ],
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "description": "USER, PARTNER, CUSTOMER, VALIDATOR",
                    "type": "string"
                },
                "validation_organization": {
                    "type": "string"
                }
            }
        },
        "dto.TokenPairDTO": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "The JWT Access Token",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "The plain Refresh Token",
                    "type": "string"
                }
            }
        },
        "response.GeneralError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
